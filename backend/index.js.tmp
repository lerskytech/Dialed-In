app.get('/api/leads/meta', authenticateToken, async (req, res) => {
  const runQuery = (sql) => {
    return new Promise((resolve, reject) => {
      database.db.all(sql, [], (err, rows) => {
        if (err) return reject(err);
        resolve(rows.map(row => Object.values(row)[0]));
      });
    });
  };

  try {
    const [cities, categories, valueTiers] = await Promise.all([
      runQuery('SELECT DISTINCT city FROM leads WHERE city IS NOT NULL ORDER BY city'),
      runQuery('SELECT DISTINCT category FROM leads WHERE category IS NOT NULL ORDER BY category'),
      runQuery('SELECT DISTINCT valueTier FROM leads WHERE valueTier IS NOT NULL ORDER BY valueTier')
    ]);

    res.json({ cities, categories, valueTiers });
  } catch (error) {
    console.error('Error fetching lead metadata:', error);
    res.status(500).json({ error: 'Failed to fetch lead metadata' });
  }
});
